{"ast":null,"code":"var _jsxFileName = \"/Users/ankussai/Documents/SandBox/ReactApps/wikipage/src/tasks/Task2.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Task2 extends React.Component {\n  buildChart() {\n    const apiUrl = 'http://127.0.0.1:8000/task1/';\n    var label = [];\n    var data = [];\n    fetch(apiUrl).then(response => response.json()).then(jsonData => (jsonData.map(singleData => (label.push(singleData.year), data.push(singleData.count))), this.setState({\n      dataPoints: {\n        //Bring in data\n        labels: label,\n        datasets: [{\n          label: 'Tiltles Published Per Year',\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: data\n        }]\n      },\n      isLoaded: true\n    }))); // console.log(label)\n    // const stateData = {\n    //     labels: label,\n    //     datasets: [\n    //       {\n    //         label: 'Tiltles Published Per Year',\n    //         backgroundColor: 'rgba(75,192,192,1)',\n    //         borderColor: 'rgba(0,0,0,1)',\n    //         borderWidth: 2,\n    //         data: data\n    //       }\n    //     ]\n    //   }\n    // this.setState( {dataPoints:stateData})\n    //      let myChartRef = this.chartReference.current.getContext(\"2d\");\n    //      new Chart(myChartRef, {\n    //         type: \"line\",\n    //         data: {\n    //             //Bring in data\n    //             labels: label,\n    //             datasets: [\n    //                 {\n    //                     label:'Tiltles Published Per Year',\n    //                     data: data,\n    //                 }\n    //             ]\n    //         },\n    //         options: {\n    //             //Customize chart options\n    //         }\n    //     });\n    //     console.log(this.chartReference)\n    //     this.setState({isLoaded:true})\n  }\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  render() {\n    const ques = \"Look at all the attributes of the document sections and generate a histogram, showing more commonly occurring attributes and give a value of how commonly they occur. For example, if location occurs a total of 10 times but one document has 9 sections with the attribute and only one another document has one section with location attribute, the value should be 2 for how commonly they occur but on the histogram, the total count is 10.\";\n    const quesBody = \"This is just task 1\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ques\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, ques), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quesBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, quesBody));\n  }\n\n} // ReactDOM.render(<Task1 />,document.getElementById(\"root\"));\n\n\nexport default Task2;","map":{"version":3,"sources":["/Users/ankussai/Documents/SandBox/ReactApps/wikipage/src/tasks/Task2.js"],"names":["React","ReactDOM","Task2","Component","buildChart","apiUrl","label","data","fetch","then","response","json","jsonData","map","singleData","push","year","count","setState","dataPoints","labels","datasets","backgroundColor","borderColor","borderWidth","isLoaded","componentDidMount","render","ques","quesBody"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AACA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;AAE/BC,EAAAA,UAAU,GAAE;AACR,UAAMC,MAAM,GAAG,8BAAf;AACA,QAAIC,KAAK,GAAC,EAAV;AACA,QAAIC,IAAI,GAAC,EAAT;AACAC,IAAAA,KAAK,CAACH,MAAD,CAAL,CAAcI,IAAd,CAAoBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAjC,EAAkDF,IAAlD,CAAwDG,QAAD,KACnDA,QAAQ,CAACC,GAAT,CAAcC,UAAD,KACTR,KAAK,CAACS,IAAN,CAAWD,UAAU,CAACE,IAAtB,GACAT,IAAI,CAACQ,IAAL,CAAUD,UAAU,CAACG,KAArB,CAFS,CAAb,GAIA,KAAKC,QAAL,CAAc;AAACC,MAAAA,UAAU,EAAC;AACtB;AACAC,QAAAA,MAAM,EAAEd,KAFc;AAGtBe,QAAAA,QAAQ,EAAE,CACN;AACIf,UAAAA,KAAK,EAAC,4BADV;AAEIgB,UAAAA,eAAe,EAAE,oBAFrB;AAGIC,UAAAA,WAAW,EAAE,eAHjB;AAIIC,UAAAA,WAAW,EAAE,CAJjB;AAKIjB,UAAAA,IAAI,EAAEA;AALV,SADM;AAHY,OAAZ;AAalBkB,MAAAA,QAAQ,EAAC;AAbS,KAAd,CALmD,CAAvD,EAJQ,CAyBR;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AACDC,EAAAA,iBAAiB,GAAG;AACjB,SAAKtB,UAAL;AAEF;;AAGDuB,EAAAA,MAAM,GAAE;AACJ,UAAMC,IAAI,GAAC,obAAX;AACA,UAAMC,QAAQ,GAAC,qBAAf;AAEA,wBAAQ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IADL,CADI,eAIJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,QADL,CAJI,CAAR;AAQH;;AAhF8B,C,CAkFnC;;;AACA,eAAe3B,KAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nclass Task2 extends React.Component{\n  \n    buildChart(){\n        const apiUrl = 'http://127.0.0.1:8000/task1/';\n        var label=[]\n        var data=[]\n        fetch(apiUrl).then((response) => response.json()).then((jsonData) =>(\n            jsonData.map((singleData)=>(\n                label.push(singleData.year),\n                data.push(singleData.count)\n            )),\n            this.setState({dataPoints:{\n                //Bring in data\n                labels: label,\n                datasets: [\n                    {\n                        label:'Tiltles Published Per Year',\n                        backgroundColor: 'rgba(75,192,192,1)',\n                        borderColor: 'rgba(0,0,0,1)',\n                        borderWidth: 2,\n                        data: data,\n                    }\n                ]\n            },\n        isLoaded:true})\n        ));\n        \n        // console.log(label)\n        \n        // const stateData = {\n        //     labels: label,\n        //     datasets: [\n        //       {\n        //         label: 'Tiltles Published Per Year',\n        //         backgroundColor: 'rgba(75,192,192,1)',\n        //         borderColor: 'rgba(0,0,0,1)',\n        //         borderWidth: 2,\n        //         data: data\n        //       }\n        //     ]\n        //   }\n        // this.setState( {dataPoints:stateData})\n        //      let myChartRef = this.chartReference.current.getContext(\"2d\");\n        //      new Chart(myChartRef, {\n        //         type: \"line\",\n        //         data: {\n        //             //Bring in data\n        //             labels: label,\n        //             datasets: [\n        //                 {\n        //                     label:'Tiltles Published Per Year',\n        //                     data: data,\n        //                 }\n        //             ]\n        //         },\n        //         options: {\n        //             //Customize chart options\n        //         }\n        //     });\n        //     console.log(this.chartReference)\n        //     this.setState({isLoaded:true})\n    }\n    componentDidMount() {\n       this.buildChart()\n\n    }\n\n\n    render(){\n        const ques=\"Look at all the attributes of the document sections and generate a histogram, showing more commonly occurring attributes and give a value of how commonly they occur. For example, if location occurs a total of 10 times but one document has 9 sections with the attribute and only one another document has one section with location attribute, the value should be 2 for how commonly they occur but on the histogram, the total count is 10.\";\n        const quesBody=\"This is just task 1\";\n        \n        return (<div className=\"task\">\n            <div className=\"ques\">\n                {ques}\n            </div>\n            <div className=\"quesBody\">\n                {quesBody}\n            </div>\n        </div>);\n    }\n}\n// ReactDOM.render(<Task1 />,document.getElementById(\"root\"));\nexport default Task2;"]},"metadata":{},"sourceType":"module"}