{"ast":null,"code":"var _jsxFileName = \"/Users/ankussai/Documents/SandBox/ReactApps/wikipage/src/tasks/Task1.js\";\nimport React from 'react';\nimport { Bar, Chart } from 'react-chartjs-2';\n\nclass Task1 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      yStart: null,\n      yEnd: null,\n      isSubmitted: false\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  render() {\n    const ques = \"Write a function that takes year range as a parameter and prints a timeseries or bar graph showing titles published in each year for the given range.\";\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ques\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    }, ques), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quesBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }, \"Year Start:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"yStart\",\n      name: \"yStart\",\n      value: this.state.yStart,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 118\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 123\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }\n    }, \"Year End:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"yEnd\",\n      name: \"yEnd\",\n      value: this.state.yEnd,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 112\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 117\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: this.state.isSubmitted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"barCanvas\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), this.state.isSubmitted && /*#__PURE__*/React.createElement(Solution, {\n      yStart: this.state.yStart,\n      yEnd: this.state.yEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    })));\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      isSubmitted: true\n    }); // const formData = {\n    //     yStart: this.state.yStart,\n    //     yEnd: this.state.yEnd\n    // };\n    // console.log(formData);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    }); // Getting access to entered values\n\n    this.setState({\n      isSubmitted: false\n    });\n  }\n\n}\n\nclass Solution extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      yStart: null,\n      yEnd: null,\n      dataPoints: null,\n      isLoaded: false\n    };\n    this.chartReference = React.createRef();\n  }\n\n  componentDidMount() {\n    const apiUrl = 'http://127.0.0.1:8000/task1/';\n    var label = [];\n    var data = [];\n    fetch(apiUrl).then(response => response.json()).then(jsonData => jsonData.map(singleData => (label.push(singleData.year), data.push(singleData.count))));\n    console.log(label);\n    const stateData = {\n      labels: label,\n      datasets: [{\n        label: 'Tiltles Published Per Year',\n        backgroundColor: 'rgba(75,192,192,1)',\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: data\n      }]\n    };\n    this.setState({\n      dataPoints: stateData,\n      isLoaded: true\n    });\n    console.log(this.chartReference);\n  }\n\n  changeHandler(value) {\n    let lineChart = this.reference.chartInstance;\n    lineChart.update();\n  }\n\n  render() {\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 20\n        }\n      }, \"loading ...\");\n    } // this.state.\n    // const options = {\n    // \ttitle: {\n    // \t\ttext: \"Titles Published in Each Year\"\n    // \t},\n    // \tdata: [\n    // \t{\n    // \t\t// Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n    // \t\ttype: \"column\",\n    // \t\tdataPoints: this.state.dataPoints\n    // \t}\n    // \t]\n    // }\n    // console.log(options)\n    // // console.log(this.state.dataPoints)\n    // const data=[\n    //     {\n    //       \"name\": \"A\",\n    //       \"value\": 46\n    //     },\n    //     {\n    //       \"name\": \"B\",\n    //       \"value\": 87\n    //     }\n    //   ]\n\n\n    return /*#__PURE__*/React.createElement(Bar, {\n      data: this.state.dataPoints,\n      options: {},\n      ref: reference => this.chartReference = reference,\n      onChange: this.changeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nfunction BarChart(props) {\n  console.log(props.barData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Bar, {\n    data: props.barData,\n    options: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }));\n} // ReactDOM.render(<Task1 />,document.getElementById(\"root\"));\n\n\nexport default Task1;","map":{"version":3,"sources":["/Users/ankussai/Documents/SandBox/ReactApps/wikipage/src/tasks/Task1.js"],"names":["React","Bar","Chart","Task1","Component","constructor","props","state","yStart","yEnd","isSubmitted","onChange","bind","onSubmit","render","ques","event","preventDefault","setState","e","target","name","value","Solution","dataPoints","isLoaded","chartReference","createRef","componentDidMount","apiUrl","label","data","fetch","then","response","json","jsonData","map","singleData","push","year","count","console","log","stateData","labels","datasets","backgroundColor","borderColor","borderWidth","changeHandler","lineChart","reference","chartInstance","update","BarChart","barData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Bar,Chart} from 'react-chartjs-2';\nclass Task1 extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n        yStart:null,\n        yEnd:null,\n        isSubmitted: false\n      };\n      this.onChange = this.onChange.bind(this);\n      this.onSubmit = this.onSubmit.bind(this);\n    }\n    render(){\n        const ques=\"Write a function that takes year range as a parameter and prints a timeseries or bar graph showing titles published in each year for the given range.\";\n        \n        return (\n        <div className=\"task\">\n            <div className=\"ques\">\n                {ques}\n            </div>\n            <div className=\"quesBody\">\n                <form onSubmit={this.onSubmit}>\n                <label>Year Start:</label>\n                    <input type=\"text\" id=\"yStart\" name=\"yStart\" value={this.state.yStart} onChange={this.onChange}/><br/><br/>\n                    <label>Year End:</label>\n                    <input type=\"text\" id=\"yEnd\" name=\"yEnd\" value={this.state.yEnd} onChange={this.onChange}/><br/><br/>\n                    <input type=\"submit\" value=\"Submit\" disabled={this.state.isSubmitted}/>\n                </form>\n                <canvas id=\"barCanvas\">\n                </canvas>\n                {this.state.isSubmitted &&\n                <Solution yStart={this.state.yStart} yEnd={this.state.yEnd}/>}\n            </div>\n        </div>);\n    }\n    onSubmit(event){\n        event.preventDefault();\n        this.setState({isSubmitted:true})\n        // const formData = {\n        //     yStart: this.state.yStart,\n        //     yEnd: this.state.yEnd\n        // };\n        // console.log(formData);\n    }\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });  // Getting access to entered values\n        this.setState({isSubmitted:false})\n     }\n    \n}\n\n\n\nclass Solution extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            yStart:null,\n            yEnd:null,\n            dataPoints:null,\n            isLoaded:false\n        }\n        this.chartReference = React.createRef();\n    }\n    \n    componentDidMount() {\n        const apiUrl = 'http://127.0.0.1:8000/task1/';\n        var label=[]\n        var data=[]\n        fetch(apiUrl).then((response) => response.json()).then((jsonData) =>(\n            jsonData.map((singleData)=>(\n                label.push(singleData.year),\n                data.push(singleData.count)\n            ))\n        ));\n        \n        console.log(label)\n        \n        const stateData = {\n            labels: label,\n            datasets: [\n              {\n                label: 'Tiltles Published Per Year',\n                backgroundColor: 'rgba(75,192,192,1)',\n                borderColor: 'rgba(0,0,0,1)',\n                borderWidth: 2,\n                data: data\n              }\n            ]\n          }\n        this.setState( {dataPoints:stateData\n                ,isLoaded:true\n            })\n\n           console.log(this.chartReference)\n    }\n    changeHandler(value) {\n        let lineChart = this.reference.chartInstance\n        lineChart.update();\n    }\n    render(){\n        if(!this.state.isLoaded) {\n            return <div>loading ...</div>;\n        }\n       // this.state.\n        \n        // const options = {\n\t\t// \ttitle: {\n\t\t// \t\ttext: \"Titles Published in Each Year\"\n\t\t// \t},\n\t\t// \tdata: [\n\t\t// \t{\n\t\t// \t\t// Change type to \"doughnut\", \"line\", \"splineArea\", etc.\n\t\t// \t\ttype: \"column\",\n\t\t// \t\tdataPoints: this.state.dataPoints\n\t\t// \t}\n\t\t// \t]\n        // }\n        // console.log(options)\n        // // console.log(this.state.dataPoints)\n        // const data=[\n        //     {\n        //       \"name\": \"A\",\n        //       \"value\": 46\n        //     },\n        //     {\n        //       \"name\": \"B\",\n        //       \"value\": 87\n        //     }\n        //   ]\n        return  (\n            \n                <Bar\n                    data={this.state.dataPoints}\n                    options={{\n                 }}\n                 ref={(reference) => this.chartReference = reference }\n                 onChange={this.changeHandler}\n            />\n            \n            \n        );\n    }\n}\nfunction BarChart(props) {\n    console.log(props.barData)\n    return (\n        <div>\n            <Bar\n                data={props.barData}\n                options={{\n                }}\n            />\n        </div>\n    );\n}\n// ReactDOM.render(<Task1 />,document.getElementById(\"root\"));\nexport default Task1;"]},"metadata":{},"sourceType":"module"}