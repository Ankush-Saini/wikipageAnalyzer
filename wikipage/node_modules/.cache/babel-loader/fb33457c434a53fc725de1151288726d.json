{"ast":null,"code":"var _jsxFileName = \"/Users/ankussai/Documents/SandBox/ReactApps/wikipage/src/tasks/Task2.js\";\nimport React from 'react';\nimport BarChart from '../BarChart';\nimport Histogram from 'react-chart-histogram';\n\nclass Task2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      yStart: null,\n      yEnd: null,\n      dataPoints: null,\n      isLoaded: false\n    };\n  }\n\n  buildChart() {\n    const apiUrl = 'http://127.0.0.1:8000/task2/';\n    var label = [];\n    var data = [];\n    fetch(apiUrl).then(response => response.json()).then(jsonData => (jsonData.map(singleData => (label.push(singleData.totalPerSection), data.push(singleData.total))), this.setState({\n      dataPoints: {\n        //Bring in data\n        labels: label,\n        datasets: [{\n          label: ' Published Per Year',\n          backgroundColor: 'rgba(75,192,192,1)',\n          borderColor: 'rgba(0,0,0,1)',\n          borderWidth: 2,\n          data: data\n        }]\n      },\n      isLoaded: true\n    })));\n  }\n\n  componentDidMount() {\n    this.buildChart();\n  }\n\n  render() {\n    const ques = \"Look at all the attributes of the document sections and generate a histogram, showing more commonly occurring attributes and give a value of how commonly they occur. For example, if location occurs a total of 10 times but one document has 9 sections with the attribute and only one another document has one section with location attribute, the value should be 2 for how commonly they occur but on the histogram, the total count is 10.\";\n\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ques\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, ques), \"loading ...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ques\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, ques), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"quesBody\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Histogram, {\n      xLabels: labels,\n      yValues: data,\n      width: \"400\",\n      height: \"200\",\n      options: {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default Task2;","map":{"version":3,"sources":["/Users/ankussai/Documents/SandBox/ReactApps/wikipage/src/tasks/Task2.js"],"names":["React","BarChart","Histogram","Task2","Component","constructor","props","state","yStart","yEnd","dataPoints","isLoaded","buildChart","apiUrl","label","data","fetch","then","response","json","jsonData","map","singleData","push","totalPerSection","total","setState","labels","datasets","backgroundColor","borderColor","borderWidth","componentDidMount","render","ques"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AACA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAmC;AAC/BC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,MAAM,EAAC,IADA;AAEPC,MAAAA,IAAI,EAAC,IAFE;AAGPC,MAAAA,UAAU,EAAC,IAHJ;AAIPC,MAAAA,QAAQ,EAAC;AAJF,KAAX;AAMH;;AACDC,EAAAA,UAAU,GAAE;AACR,UAAMC,MAAM,GAAG,8BAAf;AACA,QAAIC,KAAK,GAAC,EAAV;AACA,QAAIC,IAAI,GAAC,EAAT;AACAC,IAAAA,KAAK,CAACH,MAAD,CAAL,CAAcI,IAAd,CAAoBC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAAjC,EAAkDF,IAAlD,CAAwDG,QAAD,KACnDA,QAAQ,CAACC,GAAT,CAAcC,UAAD,KACTR,KAAK,CAACS,IAAN,CAAWD,UAAU,CAACE,eAAtB,GACAT,IAAI,CAACQ,IAAL,CAAUD,UAAU,CAACG,KAArB,CAFS,CAAb,GAIA,KAAKC,QAAL,CAAc;AAAChB,MAAAA,UAAU,EAAC;AACtB;AACAiB,QAAAA,MAAM,EAAEb,KAFc;AAGtBc,QAAAA,QAAQ,EAAE,CACN;AACId,UAAAA,KAAK,EAAC,qBADV;AAEIe,UAAAA,eAAe,EAAE,oBAFrB;AAGIC,UAAAA,WAAW,EAAE,eAHjB;AAIIC,UAAAA,WAAW,EAAE,CAJjB;AAKIhB,UAAAA,IAAI,EAAEA;AALV,SADM;AAHY,OAAZ;AAalBJ,MAAAA,QAAQ,EAAC;AAbS,KAAd,CALmD,CAAvD;AAqBH;;AACDqB,EAAAA,iBAAiB,GAAG;AACjB,SAAKpB,UAAL;AAEF;;AAGDqB,EAAAA,MAAM,GAAE;AACJ,UAAMC,IAAI,GAAC,obAAX;;AACA,QAAG,CAAC,KAAK3B,KAAL,CAAWI,QAAf,EAAyB;AACrB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAK;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACCuB,IADD,CAAL,gBAAP;AAKH;;AAED,wBAAQ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACJ;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,IADL,CADI,eAIJ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,SAAD;AACI,MAAA,OAAO,EAAEP,MADb;AAEI,MAAA,OAAO,EAAEZ,IAFb;AAGI,MAAA,KAAK,EAAC,KAHV;AAII,MAAA,MAAM,EAAC,KAJX;AAKI,MAAA,OAAO,EAAE,EALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAJI,CAAR;AAcH;;AAlE8B;;AAoEnC,eAAeZ,KAAf","sourcesContent":["import React from 'react';\nimport BarChart from '../BarChart';\nimport Histogram from 'react-chart-histogram';\nclass Task2 extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            yStart:null,\n            yEnd:null,\n            dataPoints:null,\n            isLoaded:false\n        }\n    }\n    buildChart(){\n        const apiUrl = 'http://127.0.0.1:8000/task2/';\n        var label=[]\n        var data=[]\n        fetch(apiUrl).then((response) => response.json()).then((jsonData) =>(\n            jsonData.map((singleData)=>(\n                label.push(singleData.totalPerSection),\n                data.push(singleData.total)\n            )),\n            this.setState({dataPoints:{\n                //Bring in data\n                labels: label,\n                datasets: [\n                    {\n                        label:' Published Per Year',\n                        backgroundColor: 'rgba(75,192,192,1)',\n                        borderColor: 'rgba(0,0,0,1)',\n                        borderWidth: 2,\n                        data: data,\n                    }\n                ]\n            },\n        isLoaded:true})\n        ));\n        \n    }\n    componentDidMount() {\n       this.buildChart()\n\n    }\n\n\n    render(){\n        const ques=\"Look at all the attributes of the document sections and generate a histogram, showing more commonly occurring attributes and give a value of how commonly they occur. For example, if location occurs a total of 10 times but one document has 9 sections with the attribute and only one another document has one section with location attribute, the value should be 2 for how commonly they occur but on the histogram, the total count is 10.\";\n        if(!this.state.isLoaded) {\n            return <div><div className=\"ques\">\n                        {ques}\n                    </div>\n                loading ...\n                </div>;\n        }\n        \n        return (<div className=\"task\">\n            <div className=\"ques\">\n                {ques}\n            </div>\n            <div className=\"quesBody\">\n            <Histogram\n                xLabels={labels}\n                yValues={data}\n                width='400'\n                height='200'\n                options={{}}\n                />\n            </div>\n        </div>);\n    }\n}\nexport default Task2"]},"metadata":{},"sourceType":"module"}